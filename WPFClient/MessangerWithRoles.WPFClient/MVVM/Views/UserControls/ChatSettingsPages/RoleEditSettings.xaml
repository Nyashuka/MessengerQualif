<UserControl x:Class="MessengerWithRoles.WPFClient.MVVM.Views.UserControls.ChatSettingsPages.RoleEditSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MessengerWithRoles.WPFClient.MVVM.Views.UserControls.ChatSettingsPages"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="ColoredTabsStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border" Padding="25,5,25,5" Margin="2px" BorderBrush="White">
                            <ContentPresenter x:Name="ContentSite" ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White" />
                                <Setter TargetName="Border" Property="Background" Value="#1e1f22" />
                                <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,5" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="ContentSite" Value="White" />
                                <Setter TargetName="Border" Property="Background" Value="#1e1f22" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40px"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Button Content="Cancel" Command="{Binding CancelEditRoleCommand}"
                    Width="100" HorizontalAlignment="Left" Margin="5"/>
            <Button Content="Save" Command="{Binding SaveRoleEditChangesCommand}"
                    Width="100" HorizontalAlignment="Left" Margin="5"/>

        </StackPanel>
        
        <TabControl Grid.Row="1" Background="#0B0B11"  >
            <TabItem Header="Info" 
                     Style="{DynamicResource ColoredTabsStyle}" 
                     HorizontalAlignment="Center"
                     >
                <StackPanel Orientation="Vertical" 
                            VerticalAlignment="Center" HorizontalAlignment="Center">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Text="Role name" Foreground="White" FontSize="40"/>
                        <TextBox Text="{Binding RoleToConfigure.Name}" FontSize="40"/>
                    </StackPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Permissions" Style="{DynamicResource ColoredTabsStyle}" HorizontalAlignment="Center">
                <DataGrid Grid.Row="1" AutoGenerateColumns="False"
                            ItemsSource="{Binding RoleToConfigure.Permissions}"
                            ScrollViewer.CanContentScroll="True"
                            VerticalScrollBarVisibility="Visible"
                            HorizontalScrollBarVisibility="Visible"
                            CanUserAddRows="false">
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="True" Width="1*" Header="Permission Name" 
                                            Binding="{Binding Name}" />

                        <DataGridTemplateColumn Header="Is allowed" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsAllowed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                         />
                                </DataTemplate>

                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="Role assignment" Style="{DynamicResource ColoredTabsStyle}" HorizontalAlignment="Center">
                <DataGrid Grid.Row="1" AutoGenerateColumns="False"
                            ItemsSource="{Binding RoleToConfigure.Assignments}"
                            ScrollViewer.CanContentScroll="True"
                            VerticalScrollBarVisibility="Visible"
                            HorizontalScrollBarVisibility="Visible"
                            CanUserAddRows="false"> 
                    <DataGrid.Columns>
                        <DataGridTextColumn IsReadOnly="True" Width="2*" Header="Display Name" 
                            Binding="{Binding User.DisplayName}" />
                        <DataGridTextColumn IsReadOnly="True" Width="2*" Header="Username" 
                            Binding="{Binding User.Username}" />

                        <DataGridTemplateColumn Header="Assigned" Width="1*">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Asigned, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                              Command="{Binding Path=DataContext.RoleToConfigure.AsignUserCommand,
                                                        RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                              CommandParameter="{Binding}"/>
                                               <!--CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}"/>-->
                                              
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
